{"version":3,"file":"static/js/729.195023aa.chunk.js","mappings":"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","sources":["services/storage.js","services/tweetsAPI.js","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/TweetCard/TweetCard.styled.jsx","components/TweetCard/TweetCard.jsx","components/TweetCardsList/TweetCardsList.styled.jsx","components/TweetCardsList/TweetCardsList.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/DropDownMenu/DropDownMenu.styled.jsx","components/DropDownMenu/DropDownMenu.jsx","pages/TweetsPage/TweetsPage.styled.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["export const saveToStorage = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error\", error.message);\n  }\n};\n\nexport const loadFromStorage = (key) => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://64442ec790738aa7c080f1f8.mockapi.io/api/v1/users\";\n\nexport async function fetchTweets(page = 1) {\n  const response = await axios.get(`${BASE_URL}?page=${page}&limit=3`);\n  return response.data;\n}\n\nexport async function updateFollowers(id, followers) {\n  const response = await axios.put(`${BASE_URL}/${id}`, followers);\n  return response.data;\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  text-align: center;\n  max-width: 200px;\n  margin: 0 auto;\n  padding: 8px 16px;\n  font-weight: 700;\n  font-size: 30px;\n  line-height: calc(24 / 18);\n  text-decoration: none;\n  border-radius: 20px;\n  border: solid 1px #373737;\n  cursor: pointer;\n  color: #373737;\n  background-color: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: rgb(227, 227, 227);\n    background-color: #5736a3;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { StyledLink } from \"./BackLink.styled\";\n\nconst BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n\nBackLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n};\n\nexport default BackLink;\n","import styled, { css } from 'styled-components';\n\nexport const Card = styled.div`\n  position: relative;\n  z-index: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 36px;\n  height: 100%;\n  border-radius: 20px;\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  background-image: url('images/bgi-1.png'), url('images/Logo-76x22.png');\n  background-position: top 28px right 36px, top 20px left 20px;\n  background-repeat: no-repeat, no-repeat;\n  color: #ebd8ff;\n  &::after {\n    position: absolute;\n    content: '';\n    z-index: 0;\n    top: 50%;\n    left: 0;\n    width: 100%;\n    height: 10px;\n    transform: translateY(-50%);\n    background-color: #ebd8ff;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`;\n\nexport const AvatarBox = styled.div`\n  z-index: 1;\n  display: flex;\n  margin-top: auto;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const Avatar = styled.img`\n  background-color: #5736a3;\n  border-radius: 50%;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 16px;\n  padding-bottom: 26px;\n`;\n\nexport const TweetsNumber = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  text-transform: uppercase;\n`;\n\nexport const FollowersNumber = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  text-transform: uppercase;\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  padding: 14px;\n  width: 196px;\n  height: 50px;\n  color: #373737;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: calc(22 / 18);\n  text-transform: uppercase;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border-style: none;\n  cursor: pointer;\n  background-color: ${({ isFollowing }) =>\n    isFollowing ? '#5CD3A8' : '#EBD8FF'};\n  transition: transform 0.3s ease-in-out, background-color 0.3s ease-in-out;\n  ${({ isFollowing }) =>\n    isFollowing &&\n    css`\n      transform: rotateY(360deg);\n      &::before {\n        transform: rotateY(360deg);\n        transform-origin: right center;\n      }\n    `}\n  &:hover {\n    background-color: ${({ isFollowing }) =>\n      isFollowing ? '#EBD8FF' : '#5CD3A8'};\n  }\n`;\n\nexport const ButtonText = styled.span`\n  transform: ${({ isFollowing }) =>\n    isFollowing ? 'rotateY(-360deg)' : 'rotateY(0deg)'};\n  display: inline-block;\n  width: 100%;\n  text-align: center;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 50%;\n    transform-origin: left center;\n    transform-style: preserve-3d;\n    transition: transform 0.3s ease-in-out;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { loadFromStorage } from \"../../services/storage\";\nimport {\n  Avatar,\n  AvatarBox,\n  Button,\n  ButtonText,\n  Card,\n  FollowersNumber,\n  TweetsNumber,\n  UserInfo,\n} from \"./TweetCard.styled\";\n\nconst TweetCard = ({ id, avatar, tweets, followers, onFollowClick }) => {\n  const isFollowing = loadFromStorage(`tweet_${id}`) === true;\n\n  const handleFollowClick = () => {\n    onFollowClick(id, isFollowing);\n  };\n\n  return (\n    <Card>\n      <AvatarBox>\n        <Avatar width={62} height={62} src={avatar} alt=\"user avatar\" />\n      </AvatarBox>\n      <UserInfo>\n        <TweetsNumber>{tweets.toLocaleString(\"en-IN\")} Tweets</TweetsNumber>\n        <FollowersNumber>\n          {followers.toLocaleString(\"en-IN\")} Followers\n        </FollowersNumber>\n      </UserInfo>\n      <Button\n        type=\"button\"\n        onClick={handleFollowClick}\n        isFollowing={isFollowing}\n      >\n        <ButtonText isFollowing={isFollowing}>\n          {isFollowing ? \"Following\" : \"Follow\"}\n        </ButtonText>\n      </Button>\n    </Card>\n  );\n};\n\nTweetCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tweets: PropTypes.number.isRequired,\n  followers: PropTypes.number.isRequired,\n  onFollowClick: PropTypes.func.isRequired,\n};\n\nexport default TweetCard;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 48px;\n  padding: 0 0 20px 0;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 380px;\n  height: 460px;\n  border-radius: 20px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n`;\n","// import PropTypes from \"prop-types\";\n// import TweetCard from \"../TweetCard/TweetCard\";\n// import { Item, List, Wrapper } from \"./TweetCardsList.styled\";\n\n// const TweetsList = ({ users, onFollowClick }) => {\n//   return (\n//     <Wrapper>\n//       <List>\n//         {users.map(({ id, tweets, followers, avatar }) => (\n//           <Item key={id}>\n//             <TweetCard\n//               id={id}\n//               tweets={tweets}\n//               followers={followers}\n//               avatar={avatar}\n//               onFollowClick={onFollowClick}\n//             />\n//           </Item>\n//         ))}\n//       </List>\n//     </Wrapper>\n//   );\n// };\n\n\n// TweetsList.propTypes = {\n//   users: PropTypes.arrayOf(PropTypes.object.isRequired),\n//   onFollowClick: PropTypes.func.isRequired,\n// };\n\n// export default TweetsList;\n\n\n\nimport PropTypes from \"prop-types\";\nimport TweetCard from \"../TweetCard/TweetCard\";\nimport { Item, List, Wrapper } from \"./TweetCardsList.styled\";\n\nconst TweetsList = ({ users, onFollowClick }) => {\n  return (\n    <Wrapper>\n      <List>\n        {users.map(({ id, tweets, followers, avatar }, index) => (\n          <Item key={`${id}_${index}`}>\n            <TweetCard\n              id={id}\n              tweets={tweets}\n              followers={followers}\n              avatar={avatar}\n              onFollowClick={onFollowClick}\n            />\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nTweetsList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      tweets: PropTypes.number.isRequired,\n      followers: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onFollowClick: PropTypes.func.isRequired,\n};\n\nexport default TweetsList;\n\n\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  display: flex;\n  text-align: center;\n  max-width: 200px;\n  margin: 0 auto;\n  padding: 8px 16px;\n  font-weight: 700;\n  font-size: 30px;\n  line-height: calc(24 / 18);\n  text-decoration: none;\n  border-radius: 20px;\n  border: solid 1px #373737;\n  cursor: pointer;\n  color: #373737;\n  background-color: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: rgb(227, 227, 227);\n    background-color: #5736a3;\n  }\n`;\n","import { Button } from \"./Button.styled\";\nimport PropTypes from \"prop-types\";\n\nconst ButtonLoadMore = ({ onBtnLoadMore }) => {\n  return (\n    <Button type=\"button\" onClick={onBtnLoadMore}>\n      Load More\n    </Button>\n  );\n};\n\nButtonLoadMore.propTypes = {\n  onBtnLoadMore: PropTypes.func.isRequired,\n};\n\nexport default ButtonLoadMore;\n","import styled from \"styled-components\";\n\nexport const LoaderBox = styled.div`\n  position: absolute;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 113%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n","import { InfinitySpin } from \"react-loader-spinner\";\nimport { LoaderBox } from \"./Loader.styled\";\n\nconst Loader = (page) => {\n  if (page) {\n    return (\n      <LoaderBox>\n        <InfinitySpin width=\"400\" color=\"#573657\" />\n      </LoaderBox>\n    );\n  }\n  return <InfinitySpin width=\"400\" color=\"#573657\" />;\n};\n\nexport default Loader;\n","import styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const Select = styled.select`\n  padding: 8px;\n  margin-top: 8px;\n  border: none;\n  border-radius: 4px;\n  color: #333;\n  background-color: linear-gradient(\n    to right,\n    rgb(201, 214, 255),\n    rgb(226, 226, 226)\n  );\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  opacity: 0;\n  font-size: 20px;\n  font-weight: 900;\n  transform: translateY(-10px);\n  animation: ${fadeIn} 0.2s ease forwards;\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);\n  }\n`;\n\nexport const Option = styled.option`\n  display: block;\n  padding: 8px 16px;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: #fff;\n  color: #333;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  &:hover {\n    background-color: #f8f8f8;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Option, Select } from \"./DropDownMenu.styled\";\n\nconst options = [\n  { value: \"show all\", label: \"SHOW ALL\" },\n  { value: \"follow\", label: \"FOLLOW\" },\n  { value: \"followings\", label: \"FOLLOWINGS\" },\n];\n\nconst DropDownMenu = ({ value, setSelectedFilter }) => {\n  const onChangeFilter = (e) => {\n    setSelectedFilter(e.target.value);\n  };\n\n  return (\n    <Select value={value} onChange={onChangeFilter}>\n      {options.map((option) => (\n        <Option key={option.value} value={option.value}>\n          {option.label}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nDropDownMenu.propTypes = {\n  value: PropTypes.string.isRequired,\n};\nexport default DropDownMenu;\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  flex-direction: column;\n  font-size: 18px;\n`;\n\nexport const NoSubscriptions = styled.p`\n  font-size: 50px;\n  margin-top: 220px;\n  margin-bottom: 220px;\n  font-weight: 900;\n`;\n","// import { useEffect, useState } from 'react';\n// import { saveToStorage, loadFromStorage } from '../../services/storage';\n// import { fetchTweets, updateFollowers } from '../../services/tweetsAPI';\n// import BackLink from '../../components/BackLink/BackLink';\n// import TweetsList from '../../components/TweetCardsList/TweetCardsList';\n// import Button from '../../components/Button/Button';\n// import Loader from '../../components/Loader/Loader';\n// import DropDownMenu from '../../components/DropDownMenu/DropDownMenu';\n// import { Section, NoSubscriptions } from './TweetsPage.styled';\n\n// const TweetsPage = () => {\n//   const [users, setUsers] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [selectedFilter, setSelectedFilter] = useState('show all');\n//   const [page, setPage] = useState(1);\n//   const [isLoadMoreVisible, setIsLoadMoreVisible] = useState(true);\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     setIsLoadMoreVisible(false);\n\n//     fetchTweets(page)\n//       .then(newUsers => {\n//         setUsers(prevUsers => [...prevUsers, ...newUsers]);\n//         setIsLoading(false);\n//         setIsLoadMoreVisible(true);\n//       })\n//       .catch(console.log);\n//   }, [page]);\n\n//   useEffect(() => {\n//     if (users.length === 12 && page !== 1) {\n//       setIsLoadMoreVisible(false);\n//     }\n//   }, [page, users.length]);\n\n//   const handleFollowClick = (userId, isFollowing) => {\n//     const updatedUsers = users.map(user => {\n//       if (user.id === userId) {\n//         const updatedUser = {\n//           ...user,\n//           followers: user.followers + (isFollowing ? -1 : 1),\n//         };\n//         updateFollowers(user.id, { followers: updatedUser.followers });\n//         return updatedUser;\n//       }\n//       return user;\n//     });\n//     setUsers(updatedUsers);\n//     saveToStorage(`tweet_${userId}`, isFollowing ? false : true);\n//   };\n\n//   const onButtonLoadMore = () => {\n//     setPage(prevPage => prevPage + 1);\n//   };\n\n//   const filterUsers = (users, selectedFilter) => {\n//     switch (selectedFilter) {\n//       case 'show all':\n//         return users;\n//       case 'follow':\n//         return users.filter(\n//           user => loadFromStorage(`tweet_${user.id}`) !== true\n//         );\n//       case 'followings':\n//         return users.filter(\n//           user => loadFromStorage(`tweet_${user.id}`) === true\n//         );\n//       default:\n//         return users;\n//     }\n//   };\n\n//   const filteredUsers = filterUsers(users, selectedFilter);\n\n//   return isLoading ? (\n//     <Loader />\n//   ) : (\n//     <Section>\n//       <BackLink to=\"/\">Go Back</BackLink>\n//       <DropDownMenu\n//         value={selectedFilter}\n//         setSelectedFilter={setSelectedFilter}\n//       />\n//       <TweetsList users={filteredUsers} onFollowClick={handleFollowClick} />\n//       {filteredUsers.length === 0 && (\n//         <NoSubscriptions>No subscriptions</NoSubscriptions>\n//       )}\n//       {isLoading && filteredUsers.length && Loader(page)}\n//       {isLoadMoreVisible && (\n//         <Button onBtnLoadMore={onButtonLoadMore} disabled={isLoading} />\n//       )}\n//     </Section>\n//   );\n// };\n\n// export default TweetsPage;\n\n\n\nimport { useEffect, useState } from 'react';\nimport { saveToStorage, loadFromStorage } from '../../services/storage';\nimport { fetchTweets, updateFollowers } from '../../services/tweetsAPI';\nimport BackLink from '../../components/BackLink/BackLink';\nimport TweetsList from '../../components/TweetCardsList/TweetCardsList';\nimport Button from '../../components/Button/Button';\nimport Loader from '../../components/Loader/Loader';\nimport DropDownMenu from '../../components/DropDownMenu/DropDownMenu';\nimport { Section, NoSubscriptions } from './TweetsPage.styled';\n\nconst TweetsPage = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState('show all');\n  const [page, setPage] = useState(1);\n  const [isLoadMoreVisible, setIsLoadMoreVisible] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsLoadMoreVisible(false);\n\n    fetchTweets(page)\n      .then(newUsers => {\n        setUsers(prevUsers => [...prevUsers, ...newUsers]);\n        setIsLoading(false);\n        setIsLoadMoreVisible(true);\n      })\n      .catch(error => {\n        console.error(error); // Обработка ошибок\n        setIsLoading(false);\n        setIsLoadMoreVisible(true);\n      });\n  }, [page]);\n\n  useEffect(() => {\n    if (users.length === 12 && page !== 1) {\n      setIsLoadMoreVisible(false);\n    }\n  }, [page, users.length]);\n\n  const handleFollowClick = (userId, isFollowing) => {\n    const updatedUsers = users.map(user => {\n      if (user.id === userId) {\n        const updatedUser = {\n          ...user,\n          followers: user.followers + (isFollowing ? -1 : 1),\n        };\n        updateFollowers(user.id, { followers: updatedUser.followers })\n          .then(response => {\n            // Обработка успеха запроса\n            console.log('Followers count updated successfully');\n          })\n          .catch(error => {\n            // Обработка ошибок\n            console.error('Failed to update followers count', error);\n          });\n        return updatedUser;\n      }\n      return user;\n    });\n    setUsers(updatedUsers);\n    saveToStorage(`tweet_${userId}`, !isFollowing);\n  };\n\n  const onButtonLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const filterUsers = (users, selectedFilter) => {\n    switch (selectedFilter) {\n      case 'show all':\n        return users;\n      case 'follow':\n        return users.filter(\n          user => loadFromStorage(`tweet_${user.id}`) !== true\n        );\n      case 'followings':\n        return users.filter(\n          user => loadFromStorage(`tweet_${user.id}`) === true\n        );\n      default:\n        return users;\n    }\n  };\n\n  const filteredUsers = filterUsers(users, selectedFilter);\n\n  return (\n    <Section>\n      <BackLink to=\"/\">Go Back</BackLink>\n      <DropDownMenu\n        value={selectedFilter}\n        setSelectedFilter={setSelectedFilter}\n      />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <TweetsList users={filteredUsers} onFollowClick={handleFollowClick} />\n          {filteredUsers.length === 0 && (\n            <NoSubscriptions>No subscriptions</NoSubscriptions>\n          )}\n          {isLoadMoreVisible && (\n<Button onBtnLoadMore={onButtonLoadMore} disabled={isLoading} />\n)}\n</>\n)}\n</Section>\n);\n};\n\nexport default TweetsPage;\n"],"names":["loadFromStorage","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","BASE_URL","page","axios","response","data","id","followers","StyledLink","styled","Link","to","children","Card","AvatarBox","Avatar","UserInfo","TweetsNumber","FollowersNumber","Button","isFollowing","css","ButtonText","avatar","tweets","onFollowClick","width","height","src","alt","toLocaleString","type","onClick","Wrapper","List","Item","users","map","index","onBtnLoadMore","LoaderBox","color","fadeIn","keyframes","Select","Option","options","value","label","setSelectedFilter","onChange","e","target","option","Section","NoSubscriptions","useState","setUsers","isLoading","setIsLoading","selectedFilter","setPage","isLoadMoreVisible","setIsLoadMoreVisible","useEffect","fetchTweets","then","newUsers","prevUsers","catch","length","filteredUsers","filter","user","filterUsers","userId","updatedUsers","updatedUser","updateFollowers","log","stringify","setItem","saveToStorage","prevPage","disabled"],"sourceRoot":""}